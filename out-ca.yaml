apiVersion: v1
kind: ServiceAccount
metadata:
  name: substra-delete-hook
  namespace: msd-orderer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: substra-delete-hook
  namespace: msd-orderer
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: substra-delete-hook
  namespace: msd-orderer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: substra-delete-hook
subjects:
  - kind: ServiceAccount
    name: substra-delete-hook
    namespace: msd-orderer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: substra-delete-hook
  namespace: msd-org-1
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: substra-delete-hook
  namespace: msd-org-1
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: substra-delete-hook
  namespace: msd-org-1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: substra-delete-hook
subjects:
  - kind: ServiceAccount
    name: substra-delete-hook
    namespace: msd-org-1
---
---
# Source: hlf-k8s/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: msd-orderer-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-orderer
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
---
# Source: hlf-k8s/charts/hlf-ca/templates/secret--ca.yaml
apiVersion: v1
kind: Secret
metadata:
  name: msd-orderer-hlf-ca--ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
type: Opaque
data:
  CA_ADMIN: "Y2FBZG1pbg=="
  
  CA_PASSWORD:  "Y2FQYXNzd29yZA=="
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--ca.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-orderer-hlf-ca--ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
data:
  GODEBUG: "netdns=go"
  FABRIC_CA_HOME: /var/hyperledger/fabric-ca
  FABRIC_CA_SERVER_CA_NAME: "rcaOrderer"
  SERVICE_DNS: 0.0.0.0  # Point to itself
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-orderer-hlf-ca--config
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
data:
  ca.yaml: |
    #############################################################################
    #   This is a configuration file for the fabric-ca-server command.
    #############################################################################
    # Version of config file
    version: 1.4.9
    # Server's listening port
    port: 7054
    # Enables debug logging
    debug: true
    # Size limit of an acceptable CRL in bytes (default: 512000)
    crlsizelimit: 512000
    #############################################################################
    #  TLS section
    #############################################################################
    tls:
      # Enable TLS (handled by the Ingress)
      enabled: false
      # TLS for the server's listening port
      certfile: /var/hyperledger/tls/secret/tls.crt
      keyfile: /var/hyperledger/tls/secret/tls.key
      clientauth:
        # Supported types: NoClientCert, RequestClientCert, RequireAnyClientCert, VerifyClientCertIfGiven and RequireAndVerifyClientCert.
        type: noclientcert
        # List of root certificate authorities used when verifying client certificates
        certfiles:
    #############################################################################
    #  The CA section contains information related to the Certificate Authority
    #  including the name of the CA, which should be unique for all members
    #  of a blockchain network.  It also includes the key and certificate files
    #  used when issuing enrollment certificates (ECerts) and transaction
    #  certificates (TCerts).
    #  The chainfile (if it exists) contains the certificate chain which
    #  should be trusted for this CA, where the 1st in the chain is always the
    #  root CA certificate.
    #############################################################################
    ca:
      # Name of this CA
      name:
      # Key file (is only used to import a private key into BCCSP)
      keyfile:
      # Certificate file (default: ca-cert.pem)
      certfile: /var/hyperledger/fabric-ca/msp/certs/msd-orderer-hlf-ca-cert.pem
      # Chain file
      chainfile:
    #############################################################################
    #  The gencrl REST endpoint is used to generate a CRL that contains revoked
    #  certificates. This section contains configuration options that are used
    #  during gencrl request processing.
    #############################################################################
    crl:
      # Specifies expiration for the generated CRL. The number of hours
      # specified by this property is added to the UTC time, the resulting time
      # is used to set the 'Next Update' date of the CRL.
      expiry: 24h
    #############################################################################
    #  The registry section controls how the fabric-ca-server does two things:
    #  1) authenticates enrollment requests which contain a username and password
    #     (also known as an enrollment ID and secret).
    #  2) once authenticated, retrieves the identity's attribute names and
    #     values which the fabric-ca-server optionally puts into TCerts
    #     which it issues for transacting on the Hyperledger Fabric blockchain.
    #     These attributes are useful for making access control decisions in
    #     chaincode.
    #  There are two main configuration options:
    #  1) The fabric-ca-server is the registry.
    #     This is true if "ldap.enabled" in the ldap section below is false.
    #  2) An LDAP server is the registry, in which case the fabric-ca-server
    #     calls the LDAP server to perform these tasks.
    #     This is true if "ldap.enabled" in the ldap section below is true,
    #     which means this "registry" section is ignored.
    #############################################################################
    registry:
      # Maximum number of times a password/secret can be reused for enrollment
      # (default: -1, which means there is no limit)
      maxenrollments: -1
      # Contains identity information which is used when LDAP is disabled
      identities:
         - name: <<<ADMIN>>>
           pass: <<<ADMINPW>>>
           type: client
           affiliation: ""
           attrs:
              hf.Registrar.Roles: "peer,orderer,client,user"
              hf.Registrar.DelegateRoles: "peer,orderer,client,user"
              hf.Revoker: true
              hf.IntermediateCA: true
              hf.GenCRL: true
              hf.Registrar.Attributes: "*"
              hf.AffiliationMgr: true
    #############################################################################
    #  Database section
    #  Supported types are: "sqlite3", "postgres", and "mysql".
    #  The datasource value depends on the type.
    #  If the type is "sqlite3", the datasource value is a file name to use
    #  as the database store.  Since "sqlite3" is an embedded database, it
    #  may not be used if you want to run the fabric-ca-server in a cluster.
    #  To run the fabric-ca-server in a cluster, you must choose "postgres"
    #  or "mysql".
    #############################################################################
    db:
      type: <<<DB_TYPE>>>
      datasource: <<<DB_DATASOURCE>>>
      tls:
          enabled: false
          certfiles:
          client:
            certfile:
            keyfile:
    #############################################################################
    #  LDAP section
    #  If LDAP is enabled, the fabric-ca-server calls LDAP to:
    #  1) authenticate enrollment ID and secret (i.e. username and password)
    #     for enrollment requests;
    #  2) To retrieve identity attributes
    #############################################################################
    ldap:
       # Enables or disables the LDAP client (default: false)
       # If this is set to true, the "registry" section is ignored.
       enabled: false
       # The URL of the LDAP server
       url: ldap://<adminDN>:<adminPassword>@<host>:<port>/<base>
       # TLS configuration for the client connection to the LDAP server
       tls:
          certfiles:
          client:
             certfile:
             keyfile:
       # Attribute related configuration for mapping from LDAP entries to Fabric CA attributes
       attribute:
          # 'names' is an array of strings containing the LDAP attribute names which are
          # requested from the LDAP server for an LDAP identity's entry
          names: ['uid','member']
          # The 'converters' section is used to convert an LDAP entry to the value of
          # a fabric CA attribute.
          # For example, the following converts an LDAP 'uid' attribute
          # whose value begins with 'revoker' to a fabric CA attribute
          # named "hf.Revoker" with a value of "true" (because the boolean expression
          # evaluates to true).
          #    converters:
          #       - name: hf.Revoker
          #         value: attr("uid") =~ "revoker*"
          converters:
             - name:
               value:
          # The 'maps' section contains named maps which may be referenced by the 'map'
          # function in the 'converters' section to map LDAP responses to arbitrary values.
          # For example, assume a user has an LDAP attribute named 'member' which has multiple
          # values which are each a distinguished name (i.e. a DN). For simplicity, assume the
          # values of the 'member' attribute are 'dn1', 'dn2', and 'dn3'.
          # Further assume the following configuration.
          #    converters:
          #       - name: hf.Registrar.Roles
          #         value: map(attr("member"),"groups")
          #    maps:
          #       groups:
          #          - name: dn1
          #            value: peer
          #          - name: dn2
          #            value: client
          # The value of the user's 'hf.Registrar.Roles' attribute is then computed to be
          # "peer,client,dn3".  This is because the value of 'attr("member")' is
          # "dn1,dn2,dn3", and the call to 'map' with a 2nd argument of
          # "group" replaces "dn1" with "peer" and "dn2" with "client".
          maps:
             groups:
                - name:
                  value:
    #############################################################################
    # Affiliations section, specified as hierarchical maps.
    # Note: Affiliations are case sensitive except for the non-leaf affiliations.
    #############################################################################
    affiliations:
      substra:
      - paris
      - nantes
    #############################################################################
    #  Signing section
    #
    #  The "default" subsection is used to sign enrollment certificates;
    #  the default expiration ("expiry" field) is "8760h", which is 1 year in hours.
    #
    #  The "ca" profile subsection is used to sign intermediate CA certificates;
    #  the default expiration ("expiry" field) is "43800h" which is 5 years in hours.
    #  Note that "isca" is true, meaning that it issues a CA certificate.
    #  A maxpathlen of 0 means that the intermediate CA cannot issue other
    #  intermediate CA certificates, though it can still issue end entity certificates.
    #  (See RFC 5280, section 4.2.1.9)
    #
    #  The "tls" profile subsection is used to sign TLS certificate requests;
    #  the default expiration ("expiry" field) is "8760h", which is 1 year in hours.
    #############################################################################
    signing:
        default:
          usage:
            - digital signature
          expiry: 1000h
        profiles:
          ca:
             usage:
               - cert sign
               - crl sign
             expiry: 43800h
             caconstraint:
               isca: true
               maxpathlen: 0
          tls:
             usage:
                - signing
                - key encipherment
                - server auth
                - client auth
                - key agreement
             expiry: 1000h
    ###########################################################################
    #  Certificate Signing Request (CSR) section.
    #  This controls the creation of the root CA certificate.
    #  The expiration for the root CA certificate is configured with the
    #  "ca.expiry" field below, whose default value is "131400h" which is
    #  15 years in hours.
    #  The pathlength field is used to limit CA certificate hierarchy as described
    #  in section 4.2.1.9 of RFC 5280.
    #  Examples:
    #  1) No pathlength value means no limit is requested.
    #  2) pathlength == 1 means a limit of 1 is requested which is the default for
    #     a root CA.  This means the root CA can issue intermediate CA certificates,
    #     but these intermediate CAs may not in turn issue other CA certificates
    #     though they can still issue end entity certificates.
    #  3) pathlength == 0 means a limit of 0 is requested;
    #     this is the default for an intermediate CA, which means it can not issue
    #     CA certificates though it can still issue end entity certificates.
    ###########################################################################
    csr:
       cn: "rcaOrderer"
       names:
          - C: "US"
            ST: "New York"
            L: "New York City"
            O: "Merck"
            OU: "apdlt"
       hosts:
         - localhost
         # K8S Service
         - msd-orderer-hlf-ca.msd-orderer.svc.cluster.local
       ca:
          expiry: 131400h
          pathlength: 1
    #############################################################################
    # BCCSP (BlockChain Crypto Service Provider) section is used to select which
    # crypto library implementation to use
    #############################################################################
    bccsp:
        default: SW
        sw:
            hash: SHA2
            security: 256
            filekeystore:
                # The directory used for the software file-based keystore
                keystore: msp/keystore
    #############################################################################
    # Multi CA section (unused in a K8S deployment)
    #############################################################################
    cacount:
    cafiles:
    #############################################################################
    # Intermediate CA section
    #
    # The relationship between servers and CAs is as follows:
    #   1) A single server process may contain or function as one or more CAs.
    #      This is configured by the "Multi CA section" above.
    #   2) Each CA is either a root CA or an intermediate CA.
    #   3) Each intermediate CA has a parent CA which is either a root CA or another intermediate CA.
    #
    # This section pertains to configuration of #2 and #3.
    # If the "intermediate.parentserver.url" property is set,
    # then this is an intermediate CA with the specified parent
    # CA.
    #
    # parentserver section
    #    url - The URL of the parent server
    #    caname - Name of the CA to enroll within the server
    #
    # enrollment section used to enroll intermediate CA with parent CA
    #    profile - Name of the signing profile to use in issuing the certificate
    #    label - Label to use in HSM operations
    #
    # tls section for secure socket connection
    #   certfiles - PEM-encoded list of trusted root certificate files
    #   client:
    #     certfile - PEM-encoded certificate file for when client authentication
    #     is enabled on server
    #     keyfile - PEM-encoded key file for when client authentication
    #     is enabled on server
    #############################################################################
    intermediate:
      parentserver:
        url:
        caname:
      enrollment:
        hosts:
        profile:
        label:
      tls:
        certfiles:
        client:
          certfile:
          keyfile:
    #############################################################################
    # Extra configuration options
    # .e.g to enable adding and removing affiliations or identities
    #############################################################################
    cfg:
      affiliations:
        allowremove: true
      identities:
        allowremove: true
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--db.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-orderer-hlf-ca--db
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
data:
  DB_SSL: "disable"
---
# Source: hlf-k8s/templates/configmap-enrollment.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-orderer-hlf-k8s-enrollment
data:
  enrollments: |
      admin adminpwd --id.attrs admin=true:ecert
      user pwd --id.type orderer
      orderer1 pwd --id.type orderer
      orderer2 pwd --id.type orderer
      orderer3 pwd --id.type orderer
---
# Source: hlf-k8s/templates/configmap-fabric.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-orderer-hlf-k8s-fabric
data:
  discoverConfig.yaml: |
    version: 0
    tlsconfig:
      certpath: /var/hyperledger/tls/client/pair/tls.crt
      keypath: /var/hyperledger/tls/client/pair/tls.key
      peercacertpath: /var/hyperledger/tls/server/cert/cacert.pem
      timeout: 0s
    signerconfig:
      mspid: MsdOrdererMSP
      identitypath: /var/hyperledger/msp/signcerts/cert.pem
      keypath: /var/hyperledger/msp/keystore/key.pem
  configtx.yaml: |
    Organizations:
    - &id001
      Name: MsdOrderer
      ID: MsdOrdererMSP
      MSPDir: /var/hyperledger/admin_msp

      Policies: &id002
        Readers:
            Type: Signature
            Rule: "OR('MsdOrdererMSP.member')"
        Writers:
            Type: Signature
            Rule: "OR('MsdOrdererMSP.member')"
        Admins:
            Type: Signature
            Rule: "OR('MsdOrdererMSP.admin')"
        Endorsement:
            Type: Signature
            Rule: "OR('MsdOrdererMSP.member')"

    Capabilities:
      Channel: &ChannelCapabilities
          V2_0: true

      Orderer: &OrdererCapabilities
          V2_0: true

      Application: &ApplicationCapabilities
          V2_0: true

    Application: &ApplicationDefaults

      Organizations: null

      Policies: &ApplicationDefaultPolicies
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

      Capabilities:
          <<: *ApplicationCapabilities

    Profiles:

  core.yaml: |
    chaincode:
      builder: hyperledger/fabric-ccenv:2.2.1
      golang:
          runtime: hyperledger/fabric-baseos:2.2.1
      externalBuilders:
        - name: external-builder
          path: /builders
    peer:
      BCCSP:
        Default: SW
        PKCS11:
          FileKeyStore:
            KeyStore: null
          Hash: null
          Label: null
          Library: null
          Pin: null
          Security: null
        SW:
          FileKeyStore:
            KeyStore: null
          Hash: SHA2
          Security: 256
      address: peer-hostname:7051
      addressAutoDetect: false
      adminService: null
      authentication:
        timewindow: 15m
      client:
        connTimeout: 3s
      deliveryclient:
        connTimeout: 3s
        reConnectBackoffThreshold: 3600s
        reconnectTotalTimeThreshold: 3600s
      discovery:
        authCacheEnabled: true
        authCacheMaxSize: 1000
        authCachePurgeRetentionRatio: 0.75
        enabled: true
        orgMembersAllowedAccess: false
      fileSystemPath: /var/hyperledger/production
      gomaxprocs: -1
      gossip:
        aliveExpirationTimeout: 25s
        aliveTimeInterval: 5s
        bootstrap: 127.0.0.1:7051
        connTimeout: 2s
        dialTimeout: 3s
        digestWaitTime: 1s
        election:
          leaderAliveThreshold: 10s
          leaderElectionDuration: 5s
          membershipSampleInterval: 1s
          startupGracePeriod: 15s
        endpoint: null
        externalEndpoint: peer-hostname:7051
        maxBlockCountToStore: 100
        maxPropagationBurstLatency: 10ms
        maxPropagationBurstSize: 10
        membershipTrackerInterval: 5s
        orgLeader: 'false'
        propagateIterations: 1
        propagatePeerNum: 3
        publishCertPeriod: 10s
        publishStateInfoInterval: 4s
        pullInterval: 4s
        pullPeerNum: 3
        pvtData:
          btlPullMargin: 10
          pullRetryThreshold: 60s
          pushAckTimeout: 3s
          reconcileBatchSize: 10
          reconcileSleepInterval: 1m
          reconciliationEnabled: true
          transientstoreMaxBlockRetention: 1000
        reconnectInterval: 25s
        recvBuffSize: 20
        requestStateInfoInterval: 4s
        requestWaitTime: 1500ms
        responseWaitTime: 2s
        sendBuffSize: 200
        skipBlockVerification: false
        skipHandshake: 'true'
        stateInfoRetentionInterval: null
        useLeaderElection: 'true'
      handlers:
        authFilters:
        - name: DefaultAuth
        - name: ExpirationCheck
        decorators:
        - name: DefaultDecorator
        endorsers:
          escc:
            library: null
            name: DefaultEndorsement
        validators:
          vscc:
            library: null
            name: DefaultValidation
      id: MsdOrderer
      keepalive:
        client:
          interval: 60s
          timeout: 20s
        deliveryClient:
          interval: 60s
          timeout: 20s
        minInterval: 60s
      listenAddress: 0.0.0.0:7051
      localMspId: MsdOrdererMSP
      localMspType: bccsp
      mspConfigPath: /var/hyperledger/admin_msp
      networkId: dev
      profile:
        enabled: false
        listenAddress: 0.0.0.0:6060
      tls:
        enabled: 'true'
        cert:
          file: /var/hyperledger/tls/server/pair/tls.crt
        key:
          file: /var/hyperledger/tls/server/pair/tls.key
        clientAuthRequired: 'true'
        clientCert:
          file: /var/hyperledger/tls/client/pair/tls.crt
        clientKey:
          file: /var/hyperledger/tls/client/pair/tls.key
        clientRootCAs:
        - /var/hyperledger/admin_msp/cacerts/cacert.pem
        rootcert:
          file: /var/hyperledger/admin_msp/cacerts/cacert.pem
      validatorPoolSize: null
---
# Source: hlf-k8s/charts/hlf-ca/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: msd-orderer-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: hlf-k8s/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: msd-orderer-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-orderer
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs:
    - get
    - watch
    - list
    - create
    - delete
---
# Source: hlf-k8s/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: msd-orderer-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-orderer
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
subjects:
- kind: ServiceAccount
  name: msd-orderer-hlf-k8s
  namespace: msd-orderer
roleRef:
  kind: Role
  name: msd-orderer-hlf-k8s
  apiGroup: rbac.authorization.k8s.io
---
# Source: hlf-k8s/charts/hlf-ca/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msd-orderer-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
spec:
  type: "ClusterIP"
  ports:
    - port: 7054
      targetPort: 7054
      protocol: TCP
      name: http
  selector:
    app: hlf-ca
    release: msd-orderer
---
# Source: hlf-k8s/charts/hlf-ca/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msd-orderer-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-orderer"
    chart: hlf-ca-2.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hlf-ca
      release: msd-orderer
  # Ensure we allow our pod to be unavailable, so we can upgrade
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: hlf-ca
        heritage: "Helm"
        release: "msd-orderer"
        chart: hlf-ca-2.0.1
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: msd-orderer-hlf-ca
        - name: ca-config
          configMap:
            name: msd-orderer-hlf-ca--config    
      initContainers:
        - name: wait-for-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent 
          envFrom:
            - configMapRef:
                name: msd-orderer-hlf-ca--db
          command: 
            - sh
            - -c
            - |
              if [ -n "$DB_TYPE" ]; then
                dockerize -wait tcp://$DB_HOST:$DB_PORT -timeout 30s && echo "Database $DB_TYPE on $DB_HOST:$DB_PORT is ready"
              fi
      containers:
        - name: ca
          image: "us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-ca:1"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              if [ -n "$DB_TYPE" ]; then
                while [ -z ${DB_PASSWORD+x} ];
                do
                  echo "\033[0;31mDB_PASSWORD environmental variable must contain a value \033[0m"
                  sleep 60
                done

                case "$DB_TYPE" in
                  postgres)
                    export DB_DATASOURCE="host=${DB_HOST} port=${DB_PORT} user=${DB_USERNAME} password=${DB_PASSWORD} dbname=${DB_DATABASE} sslmode=${DB_SSL}";;
                  mysql)
                    export DB_DATASOURCE="${DB_USERNAME}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_DATABASE}?parseTime=true" ;;
                  *)
                    echo "\033[0;31m Database type '$DB_TYPE' not supported\033[0m"; exit 1;;
                esac
              fi

              mkdir -p $FABRIC_CA_HOME
              cp /var/hyperledger/ca_config/ca.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<ADMIN>>>|${CA_ADMIN}|g" ${FABRIC_CA_HOME}/fabric-ca-server-config.yaml
              sed -i "s|<<<ADMINPW>>>|${CA_PASSWORD}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_TYPE>>>|${DB_TYPE:-"sqlite3"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_DATASOURCE>>>|${DB_DATASOURCE:-"fabric-ca-server.db"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml

              echo ">\033[0;35m fabric-ca-server start \033[0m"
              fabric-ca-server start
          envFrom:
            - secretRef:
                name: msd-orderer-hlf-ca--ca
            - configMapRef:
                name: msd-orderer-hlf-ca--db
            - configMapRef:
                name: msd-orderer-hlf-ca--ca
          env:
          ports:
            - name: ca-port
              containerPort: 7054
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /cainfo
              port: 7054
          readinessProbe:
            httpGet:
              path: /cainfo
              port: 7054             
          volumeMounts:
            - name: data
              mountPath: /var/hyperledger
            - name: ca-config
              readOnly: true
              mountPath: /var/hyperledger/ca_config
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 128Mi
---
# Source: hlf-k8s/templates/deployment-enrollement-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msd-orderer-hlf-k8s-enrollment-operator
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-orderer
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: hlf-k8s-enrollment-operator
        app.kubernetes.io/instance: msd-orderer
  template:
    metadata:
      annotations:
        rollme: "8XE2a"
      labels:
        app.kubernetes.io/name: hlf-k8s-enrollment-operator
        app.kubernetes.io/instance: msd-orderer
    spec:
      serviceAccountName: msd-orderer-hlf-k8s
      containers:
        - name: fabric-tools
          image: us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-ca-tools:4
          imagePullPolicy: "IfNotPresent"
          command: ['sh', '-c']
          args:
            - |
              ## Update CA certs
              update-ca-certificates

              ## Check connection with the Certificate Authority
              printf "[DEBUG] Testing the connection with this node's Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054)\n"
              until fabric-ca-client getcainfo -u http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054; do
                printf "[DEBUG] Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054) server is not reacheable, retry in 5s\n"
                sleep 5
              done

              ## Enroll CA administrator
              printf "[DEBUG] Testing enrollment of CA admin\n"
              until fabric-ca-client identity list -u http://caAdmin:caPassword@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 --id caAdmin; do
                printf "[DEBUG] Certificate Authority admin is not enrolled, enrolling it now:\n"
                fabric-ca-client enroll -d -u http://caAdmin:caPassword@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 -M /var/hyperledger/fabric-ca/msp
                sleep 1
              done

              ## Create CA cert kubernetes secret
              ## Note: The CA cert is shared between all identities (CA admin, admins, and users)
              until kubectl get secret hlf-cacert > /dev/null; do
                printf "[DEBUG] CA cacerts k8s secret not found, creating it now:\n"
                kubectl create secret generic hlf-cacert --from-file=cacert.pem=$(find /var/hyperledger/fabric-ca/msp/cacerts -type f)
                sleep 1
              done

              ## Check connection with the Orderer Certificate Authority
              printf "[DEBUG] Testing the connection with the Orderer Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054)\n"
              until fabric-ca-client getcainfo -u http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 -H /tmp/orderer; do
                printf "[DEBUG] Orderer Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054) server is not reacheable, retry in 5s\n"
                sleep 5
              done

              ## Create Orderer CA Cert kubernetes secret
              until kubectl get secret ord-tls-rootcert > /dev/null; do
                printf "[DEBUG] Orderer CA cacerts k8s secret not found, creating it now:\n"
                kubectl create secret generic ord-tls-rootcert --from-file=cacert.pem=$(find /tmp/orderer/msp/cacerts -type f)
                sleep 1
              done

              ## Enroll users
              while true; do

                while IFS=" " read -r name secret options; do

                  printf "[DEBUG] Checking enrollment of CA user $name\n"

                  ## Register user
                  until fabric-ca-client identity list -u http://caAdmin:caPassword@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 --id $name; do
                    printf "[DEBUG] User $name is not registered, registering the user now:\n"
                    fabric-ca-client register -d -u http://caAdmin:caPassword@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 --id.name $name --id.secret $secret $options
                    sleep 1
                  done

                  ## Enroll user (MSP)
                  until [ -d "/data/$name/msp" ]; do
                    printf "[DEBUG] MSP certificate not found: enrolling user '$name' now:\n"
                    fabric-ca-client enroll -d -u http://$name:$secret@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 -M /data/$name/msp
                    sleep 1
                  done

                  ## Enroll user (TLS)
                  until [ -d "/data/$name/tls" ]; do
                    printf "[DEBUG] TLS certificate not found: enrolling user '$name' with TLS profile now:\n"
                    fabric-ca-client enroll -d --enrollment.profile tls -u http://$name:$secret@msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 -M /data/$name/tls --csr.hosts "localhost,127.0.0.1,127,0,0.1,localhost,*.msd-orderer.svc.cluster.local,*.elb.us-east-1.amazonaws.com,*.msd-orderer.apdlt-dev.merck.com"
                    sleep 1
                  done

                  ## Create secret: MSP cert
                  until kubectl get secret hlf-msp-cert-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'MSP cert' secret not found, creating it now:\n"
                    kubectl create secret generic hlf-msp-cert-$name --from-file=cert.pem=/data/$name/msp/signcerts/cert.pem
                    sleep 1
                  done

                  ## Create secret: MSP key
                  until kubectl get secret hlf-msp-key-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'MSP key' secret not found, creating it now:\n"
                    kubectl create secret generic hlf-msp-key-$name --from-file=key.pem=$(find /data/$name/msp/keystore -type f)
                    sleep 1
                  done

                  ## Create secret: TLS pair
                  until kubectl get secret hlf-tls-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'TLS pair' secret not found, creating it now:\n"
                    kubectl create secret tls hlf-tls-$name --key $(find /data/$name/tls/keystore -type f) --cert /data/$name/tls/signcerts/cert.pem
                    sleep 1
                  done

                done < /config/enrollments

                sleep 10
              done
          resources:
              null
          volumeMounts:
            - mountPath: /etc/hyperledger/fabric
              name: fabric-config
              readOnly: true
            - mountPath: /config
              name: enrollment
              readOnly: true
            - mountPath: /data
              name: data
      volumes:
        - name: fabric-config
          configMap:
            name: msd-orderer-hlf-k8s-fabric
        - name: enrollment
          configMap:
            name: msd-orderer-hlf-k8s-enrollment
        - name: data
          emptyDir: {}
---
# Source: hlf-k8s/templates/configmap-application-organization.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/configmap-application-proposal-organization.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/configmap-private-collections.yaml
# Copyright 2018 Owkin, inc.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #      http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
---
# Source: hlf-k8s/templates/configmap-system-organizations.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-appchannel-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-chaincode-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-config-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-genesis-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-monitor.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-system-channel-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-toolbox.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/job-hook-delete-secrets.yaml
# # Copyright 2018 Owkin, inc.
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #      http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.

#
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: msd-orderer-hlf-k8s-hook-delete-secrets
#   labels:
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/instance: msd-orderer
#     helm.sh/chart: hlf-k8s-7.0.1
#     app.kubernetes.io/name: hlf-k8s-hook-delete-secrets
#     app.kubernetes.io/part-of: hlf-k8s
#   annotations:
#     "helm.sh/hook": post-delete
#     "helm.sh/hook-delete-policy": hook-succeeded
#   namespace: "msd-orderer"
# spec:
#   template:
#     spec:
#       restartPolicy: OnFailure
#       serviceAccountName: substra-delete-hook
#       containers:
#       - name: fabric-tools
#         image: us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-tools:1
#         imagePullPolicy: "IfNotPresent"
#         command: ['kubectl']
#         args:
#           - delete
#           - secrets
#           - -n
#           - msd-orderer
#           - hlf-msp-cert-user
#           - hlf-msp-key-user
#           - hlf-cacert
#           - hlf-tls-admin
#           - hlf-tls-user
#           - hlf-cacert
#           - hlf-cacert
#           - hlf-msp-cert-admin
#           - hlf-msp-key-admin
#           - ord-tls-rootcert
#           - hlf-genesis
#           - --ignore-not-found=true
#           - --wait=true
#           - -v=4
#
#
#
#

#
---
# Source: hlf-k8s/templates/rbac.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
---
# Source: hlf-k8s/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: msd-org-1-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-org-1
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
---
# Source: hlf-k8s/charts/hlf-ca/templates/secret--ca.yaml
apiVersion: v1
kind: Secret
metadata:
  name: msd-org-1-hlf-ca--ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
type: Opaque
data:
  CA_ADMIN: "Y2FBZG1pbg=="
  
  CA_PASSWORD:  "Y2FQYXNzd29yZA=="
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--ca.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-org-1-hlf-ca--ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
data:
  GODEBUG: "netdns=go"
  FABRIC_CA_HOME: /var/hyperledger/fabric-ca
  FABRIC_CA_SERVER_CA_NAME: "rcaOrg1"
  SERVICE_DNS: 0.0.0.0  # Point to itself
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-org-1-hlf-ca--config
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
data:
  ca.yaml: |
    #############################################################################
    #   This is a configuration file for the fabric-ca-server command.
    #############################################################################
    # Version of config file
    version: 1.4.9
    # Server's listening port
    port: 7054
    # Enables debug logging
    debug: true
    # Size limit of an acceptable CRL in bytes (default: 512000)
    crlsizelimit: 512000
    #############################################################################
    #  TLS section
    #############################################################################
    tls:
      # Enable TLS (handled by the Ingress)
      enabled: false
      # TLS for the server's listening port
      certfile: /var/hyperledger/tls/secret/tls.crt
      keyfile: /var/hyperledger/tls/secret/tls.key
      clientauth:
        # Supported types: NoClientCert, RequestClientCert, RequireAnyClientCert, VerifyClientCertIfGiven and RequireAndVerifyClientCert.
        type: noclientcert
        # List of root certificate authorities used when verifying client certificates
        certfiles:
    #############################################################################
    #  The CA section contains information related to the Certificate Authority
    #  including the name of the CA, which should be unique for all members
    #  of a blockchain network.  It also includes the key and certificate files
    #  used when issuing enrollment certificates (ECerts) and transaction
    #  certificates (TCerts).
    #  The chainfile (if it exists) contains the certificate chain which
    #  should be trusted for this CA, where the 1st in the chain is always the
    #  root CA certificate.
    #############################################################################
    ca:
      # Name of this CA
      name:
      # Key file (is only used to import a private key into BCCSP)
      keyfile:
      # Certificate file (default: ca-cert.pem)
      certfile: /var/hyperledger/fabric-ca/msp/certs/msd-org-1-hlf-ca-cert.pem
      # Chain file
      chainfile:
    #############################################################################
    #  The gencrl REST endpoint is used to generate a CRL that contains revoked
    #  certificates. This section contains configuration options that are used
    #  during gencrl request processing.
    #############################################################################
    crl:
      # Specifies expiration for the generated CRL. The number of hours
      # specified by this property is added to the UTC time, the resulting time
      # is used to set the 'Next Update' date of the CRL.
      expiry: 24h
    #############################################################################
    #  The registry section controls how the fabric-ca-server does two things:
    #  1) authenticates enrollment requests which contain a username and password
    #     (also known as an enrollment ID and secret).
    #  2) once authenticated, retrieves the identity's attribute names and
    #     values which the fabric-ca-server optionally puts into TCerts
    #     which it issues for transacting on the Hyperledger Fabric blockchain.
    #     These attributes are useful for making access control decisions in
    #     chaincode.
    #  There are two main configuration options:
    #  1) The fabric-ca-server is the registry.
    #     This is true if "ldap.enabled" in the ldap section below is false.
    #  2) An LDAP server is the registry, in which case the fabric-ca-server
    #     calls the LDAP server to perform these tasks.
    #     This is true if "ldap.enabled" in the ldap section below is true,
    #     which means this "registry" section is ignored.
    #############################################################################
    registry:
      # Maximum number of times a password/secret can be reused for enrollment
      # (default: -1, which means there is no limit)
      maxenrollments: -1
      # Contains identity information which is used when LDAP is disabled
      identities:
         - name: <<<ADMIN>>>
           pass: <<<ADMINPW>>>
           type: client
           affiliation: ""
           attrs:
              hf.Registrar.Roles: "peer,orderer,client,user"
              hf.Registrar.DelegateRoles: "peer,orderer,client,user"
              hf.Revoker: true
              hf.IntermediateCA: true
              hf.GenCRL: true
              hf.Registrar.Attributes: "*"
              hf.AffiliationMgr: true
    #############################################################################
    #  Database section
    #  Supported types are: "sqlite3", "postgres", and "mysql".
    #  The datasource value depends on the type.
    #  If the type is "sqlite3", the datasource value is a file name to use
    #  as the database store.  Since "sqlite3" is an embedded database, it
    #  may not be used if you want to run the fabric-ca-server in a cluster.
    #  To run the fabric-ca-server in a cluster, you must choose "postgres"
    #  or "mysql".
    #############################################################################
    db:
      type: <<<DB_TYPE>>>
      datasource: <<<DB_DATASOURCE>>>
      tls:
          enabled: false
          certfiles:
          client:
            certfile:
            keyfile:
    #############################################################################
    #  LDAP section
    #  If LDAP is enabled, the fabric-ca-server calls LDAP to:
    #  1) authenticate enrollment ID and secret (i.e. username and password)
    #     for enrollment requests;
    #  2) To retrieve identity attributes
    #############################################################################
    ldap:
       # Enables or disables the LDAP client (default: false)
       # If this is set to true, the "registry" section is ignored.
       enabled: false
       # The URL of the LDAP server
       url: ldap://<adminDN>:<adminPassword>@<host>:<port>/<base>
       # TLS configuration for the client connection to the LDAP server
       tls:
          certfiles:
          client:
             certfile:
             keyfile:
       # Attribute related configuration for mapping from LDAP entries to Fabric CA attributes
       attribute:
          # 'names' is an array of strings containing the LDAP attribute names which are
          # requested from the LDAP server for an LDAP identity's entry
          names: ['uid','member']
          # The 'converters' section is used to convert an LDAP entry to the value of
          # a fabric CA attribute.
          # For example, the following converts an LDAP 'uid' attribute
          # whose value begins with 'revoker' to a fabric CA attribute
          # named "hf.Revoker" with a value of "true" (because the boolean expression
          # evaluates to true).
          #    converters:
          #       - name: hf.Revoker
          #         value: attr("uid") =~ "revoker*"
          converters:
             - name:
               value:
          # The 'maps' section contains named maps which may be referenced by the 'map'
          # function in the 'converters' section to map LDAP responses to arbitrary values.
          # For example, assume a user has an LDAP attribute named 'member' which has multiple
          # values which are each a distinguished name (i.e. a DN). For simplicity, assume the
          # values of the 'member' attribute are 'dn1', 'dn2', and 'dn3'.
          # Further assume the following configuration.
          #    converters:
          #       - name: hf.Registrar.Roles
          #         value: map(attr("member"),"groups")
          #    maps:
          #       groups:
          #          - name: dn1
          #            value: peer
          #          - name: dn2
          #            value: client
          # The value of the user's 'hf.Registrar.Roles' attribute is then computed to be
          # "peer,client,dn3".  This is because the value of 'attr("member")' is
          # "dn1,dn2,dn3", and the call to 'map' with a 2nd argument of
          # "group" replaces "dn1" with "peer" and "dn2" with "client".
          maps:
             groups:
                - name:
                  value:
    #############################################################################
    # Affiliations section, specified as hierarchical maps.
    # Note: Affiliations are case sensitive except for the non-leaf affiliations.
    #############################################################################
    affiliations:
      substra:
      - paris
      - nantes
    #############################################################################
    #  Signing section
    #
    #  The "default" subsection is used to sign enrollment certificates;
    #  the default expiration ("expiry" field) is "8760h", which is 1 year in hours.
    #
    #  The "ca" profile subsection is used to sign intermediate CA certificates;
    #  the default expiration ("expiry" field) is "43800h" which is 5 years in hours.
    #  Note that "isca" is true, meaning that it issues a CA certificate.
    #  A maxpathlen of 0 means that the intermediate CA cannot issue other
    #  intermediate CA certificates, though it can still issue end entity certificates.
    #  (See RFC 5280, section 4.2.1.9)
    #
    #  The "tls" profile subsection is used to sign TLS certificate requests;
    #  the default expiration ("expiry" field) is "8760h", which is 1 year in hours.
    #############################################################################
    signing:
        default:
          usage:
            - digital signature
          expiry: 1000h
        profiles:
          ca:
             usage:
               - cert sign
               - crl sign
             expiry: 43800h
             caconstraint:
               isca: true
               maxpathlen: 0
          tls:
             usage:
                - signing
                - key encipherment
                - server auth
                - client auth
                - key agreement
             expiry: 1000h
    ###########################################################################
    #  Certificate Signing Request (CSR) section.
    #  This controls the creation of the root CA certificate.
    #  The expiration for the root CA certificate is configured with the
    #  "ca.expiry" field below, whose default value is "131400h" which is
    #  15 years in hours.
    #  The pathlength field is used to limit CA certificate hierarchy as described
    #  in section 4.2.1.9 of RFC 5280.
    #  Examples:
    #  1) No pathlength value means no limit is requested.
    #  2) pathlength == 1 means a limit of 1 is requested which is the default for
    #     a root CA.  This means the root CA can issue intermediate CA certificates,
    #     but these intermediate CAs may not in turn issue other CA certificates
    #     though they can still issue end entity certificates.
    #  3) pathlength == 0 means a limit of 0 is requested;
    #     this is the default for an intermediate CA, which means it can not issue
    #     CA certificates though it can still issue end entity certificates.
    ###########################################################################
    csr:
       cn: "rcaOrg1"
       names:
          - C: "US"
            ST: "New York"
            L: "New York City"
            O: "Merck"
            OU: "apdlt"
       hosts:
         - localhost
         # K8S Service
         - msd-org-1-hlf-ca.msd-org-1.svc.cluster.local
       ca:
          expiry: 131400h
          pathlength: 1
    #############################################################################
    # BCCSP (BlockChain Crypto Service Provider) section is used to select which
    # crypto library implementation to use
    #############################################################################
    bccsp:
        default: SW
        sw:
            hash: SHA2
            security: 256
            filekeystore:
                # The directory used for the software file-based keystore
                keystore: msp/keystore
    #############################################################################
    # Multi CA section (unused in a K8S deployment)
    #############################################################################
    cacount:
    cafiles:
    #############################################################################
    # Intermediate CA section
    #
    # The relationship between servers and CAs is as follows:
    #   1) A single server process may contain or function as one or more CAs.
    #      This is configured by the "Multi CA section" above.
    #   2) Each CA is either a root CA or an intermediate CA.
    #   3) Each intermediate CA has a parent CA which is either a root CA or another intermediate CA.
    #
    # This section pertains to configuration of #2 and #3.
    # If the "intermediate.parentserver.url" property is set,
    # then this is an intermediate CA with the specified parent
    # CA.
    #
    # parentserver section
    #    url - The URL of the parent server
    #    caname - Name of the CA to enroll within the server
    #
    # enrollment section used to enroll intermediate CA with parent CA
    #    profile - Name of the signing profile to use in issuing the certificate
    #    label - Label to use in HSM operations
    #
    # tls section for secure socket connection
    #   certfiles - PEM-encoded list of trusted root certificate files
    #   client:
    #     certfile - PEM-encoded certificate file for when client authentication
    #     is enabled on server
    #     keyfile - PEM-encoded key file for when client authentication
    #     is enabled on server
    #############################################################################
    intermediate:
      parentserver:
        url:
        caname:
      enrollment:
        hosts:
        profile:
        label:
      tls:
        certfiles:
        client:
          certfile:
          keyfile:
    #############################################################################
    # Extra configuration options
    # .e.g to enable adding and removing affiliations or identities
    #############################################################################
    cfg:
      affiliations:
        allowremove: true
      identities:
        allowremove: true
---
# Source: hlf-k8s/charts/hlf-ca/templates/configmap--db.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-org-1-hlf-ca--db
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
data:
  DB_SSL: "disable"
---
# Source: hlf-k8s/templates/configmap-enrollment.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-org-1-hlf-k8s-enrollment
data:
  enrollments: |
      admin adminpwd --id.attrs hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert
      user pwd --id.type peer
      peer1 pwd --id.type peer
      peer2 pwd --id.type peer
---
# Source: hlf-k8s/templates/configmap-fabric.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: msd-org-1-hlf-k8s-fabric
data:
  discoverConfig.yaml: |
    version: 0
    tlsconfig:
      certpath: /var/hyperledger/tls/client/pair/tls.crt
      keypath: /var/hyperledger/tls/client/pair/tls.key
      peercacertpath: /var/hyperledger/tls/server/cert/cacert.pem
      timeout: 0s
    signerconfig:
      mspid: MsdPeerMsp
      identitypath: /var/hyperledger/msp/signcerts/cert.pem
      keypath: /var/hyperledger/msp/keystore/key.pem
  configtx.yaml: |
    Organizations:
    - &id001
      Name: MsdPeerOrg
      ID: MsdPeerMsp
      MSPDir: /var/hyperledger/admin_msp

      Policies: &id002
        Readers:
            Type: Signature
            Rule: "OR('MsdPeerMsp.member')"
        Writers:
            Type: Signature
            Rule: "OR('MsdPeerMsp.member')"
        Admins:
            Type: Signature
            Rule: "OR('MsdPeerMsp.admin')"
        Endorsement:
            Type: Signature
            Rule: "OR('MsdPeerMsp.member')"

    Capabilities:
      Channel: &ChannelCapabilities
          V2_0: true

      Orderer: &OrdererCapabilities
          V2_0: true

      Application: &ApplicationCapabilities
          V2_0: true

    Application: &ApplicationDefaults

      Organizations: null

      Policies: &ApplicationDefaultPolicies
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "ANY Endorsement"
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

      Capabilities:
          <<: *ApplicationCapabilities

    Profiles:

  core.yaml: |
    chaincode:
      builder: hyperledger/fabric-ccenv:2.2.1
      golang:
          runtime: hyperledger/fabric-baseos:2.2.1
      externalBuilders:
        - name: external-builder
          path: /builders
    peer:
      BCCSP:
        Default: SW
        PKCS11:
          FileKeyStore:
            KeyStore: null
          Hash: null
          Label: null
          Library: null
          Pin: null
          Security: null
        SW:
          FileKeyStore:
            KeyStore: null
          Hash: SHA2
          Security: 256
      address: peer-hostname:7051
      addressAutoDetect: false
      adminService: null
      authentication:
        timewindow: 15m
      client:
        connTimeout: 3s
      deliveryclient:
        connTimeout: 3s
        reConnectBackoffThreshold: 3600s
        reconnectTotalTimeThreshold: 3600s
      discovery:
        authCacheEnabled: true
        authCacheMaxSize: 1000
        authCachePurgeRetentionRatio: 0.75
        enabled: true
        orgMembersAllowedAccess: false
      fileSystemPath: /var/hyperledger/production
      gomaxprocs: -1
      gossip:
        aliveExpirationTimeout: 25s
        aliveTimeInterval: 5s
        bootstrap: 127.0.0.1:7051
        connTimeout: 2s
        dialTimeout: 3s
        digestWaitTime: 1s
        election:
          leaderAliveThreshold: 10s
          leaderElectionDuration: 5s
          membershipSampleInterval: 1s
          startupGracePeriod: 15s
        endpoint: null
        externalEndpoint: peer-hostname:7051
        maxBlockCountToStore: 100
        maxPropagationBurstLatency: 10ms
        maxPropagationBurstSize: 10
        membershipTrackerInterval: 5s
        orgLeader: 'false'
        propagateIterations: 1
        propagatePeerNum: 3
        publishCertPeriod: 10s
        publishStateInfoInterval: 4s
        pullInterval: 4s
        pullPeerNum: 3
        pvtData:
          btlPullMargin: 10
          pullRetryThreshold: 60s
          pushAckTimeout: 3s
          reconcileBatchSize: 10
          reconcileSleepInterval: 1m
          reconciliationEnabled: true
          transientstoreMaxBlockRetention: 1000
        reconnectInterval: 25s
        recvBuffSize: 20
        requestStateInfoInterval: 4s
        requestWaitTime: 1500ms
        responseWaitTime: 2s
        sendBuffSize: 200
        skipBlockVerification: false
        skipHandshake: 'true'
        stateInfoRetentionInterval: null
        useLeaderElection: 'true'
      handlers:
        authFilters:
        - name: DefaultAuth
        - name: ExpirationCheck
        decorators:
        - name: DefaultDecorator
        endorsers:
          escc:
            library: null
            name: DefaultEndorsement
        validators:
          vscc:
            library: null
            name: DefaultValidation
      id: MsdPeerOrg
      keepalive:
        client:
          interval: 60s
          timeout: 20s
        deliveryClient:
          interval: 60s
          timeout: 20s
        minInterval: 60s
      listenAddress: 0.0.0.0:7051
      localMspId: MsdPeerMsp
      localMspType: bccsp
      mspConfigPath: /var/hyperledger/admin_msp
      networkId: dev
      profile:
        enabled: false
        listenAddress: 0.0.0.0:6060
      tls:
        enabled: 'true'
        cert:
          file: /var/hyperledger/tls/server/pair/tls.crt
        key:
          file: /var/hyperledger/tls/server/pair/tls.key
        clientAuthRequired: 'true'
        clientCert:
          file: /var/hyperledger/tls/client/pair/tls.crt
        clientKey:
          file: /var/hyperledger/tls/client/pair/tls.key
        clientRootCAs:
        - /var/hyperledger/admin_msp/cacerts/cacert.pem
        rootcert:
          file: /var/hyperledger/admin_msp/cacerts/cacert.pem
      validatorPoolSize: null
---
# Source: hlf-k8s/charts/hlf-ca/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: msd-org-1-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: hlf-k8s/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: msd-org-1-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-org-1
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs:
    - get
    - watch
    - list
    - create
    - delete
---
# Source: hlf-k8s/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: msd-org-1-hlf-k8s
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-org-1
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
    app.kubernetes.io/part-of: hlf-k8s
subjects:
- kind: ServiceAccount
  name: msd-org-1-hlf-k8s
  namespace: msd-org-1
roleRef:
  kind: Role
  name: msd-org-1-hlf-k8s
  apiGroup: rbac.authorization.k8s.io
---
# Source: hlf-k8s/charts/hlf-ca/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msd-org-1-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
spec:
  type: "ClusterIP"
  ports:
    - port: 7054
      targetPort: 7054
      protocol: TCP
      name: http
  selector:
    app: hlf-ca
    release: msd-org-1
---
# Source: hlf-k8s/charts/hlf-ca/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msd-org-1-hlf-ca
  labels:
    app: hlf-ca
    heritage: "Helm"
    release: "msd-org-1"
    chart: hlf-ca-2.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hlf-ca
      release: msd-org-1
  # Ensure we allow our pod to be unavailable, so we can upgrade
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: hlf-ca
        heritage: "Helm"
        release: "msd-org-1"
        chart: hlf-ca-2.0.1
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: msd-org-1-hlf-ca
        - name: ca-config
          configMap:
            name: msd-org-1-hlf-ca--config    
      initContainers:
        - name: wait-for-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent 
          envFrom:
            - configMapRef:
                name: msd-org-1-hlf-ca--db
          command: 
            - sh
            - -c
            - |
              if [ -n "$DB_TYPE" ]; then
                dockerize -wait tcp://$DB_HOST:$DB_PORT -timeout 30s && echo "Database $DB_TYPE on $DB_HOST:$DB_PORT is ready"
              fi
      containers:
        - name: ca
          image: "us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-ca:1"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              if [ -n "$DB_TYPE" ]; then
                while [ -z ${DB_PASSWORD+x} ];
                do
                  echo "\033[0;31mDB_PASSWORD environmental variable must contain a value \033[0m"
                  sleep 60
                done

                case "$DB_TYPE" in
                  postgres)
                    export DB_DATASOURCE="host=${DB_HOST} port=${DB_PORT} user=${DB_USERNAME} password=${DB_PASSWORD} dbname=${DB_DATABASE} sslmode=${DB_SSL}";;
                  mysql)
                    export DB_DATASOURCE="${DB_USERNAME}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_DATABASE}?parseTime=true" ;;
                  *)
                    echo "\033[0;31m Database type '$DB_TYPE' not supported\033[0m"; exit 1;;
                esac
              fi

              mkdir -p $FABRIC_CA_HOME
              cp /var/hyperledger/ca_config/ca.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<ADMIN>>>|${CA_ADMIN}|g" ${FABRIC_CA_HOME}/fabric-ca-server-config.yaml
              sed -i "s|<<<ADMINPW>>>|${CA_PASSWORD}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_TYPE>>>|${DB_TYPE:-"sqlite3"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_DATASOURCE>>>|${DB_DATASOURCE:-"fabric-ca-server.db"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml

              echo ">\033[0;35m fabric-ca-server start \033[0m"
              fabric-ca-server start
          envFrom:
            - secretRef:
                name: msd-org-1-hlf-ca--ca
            - configMapRef:
                name: msd-org-1-hlf-ca--db
            - configMapRef:
                name: msd-org-1-hlf-ca--ca
          env:
          ports:
            - name: ca-port
              containerPort: 7054
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /cainfo
              port: 7054
          readinessProbe:
            httpGet:
              path: /cainfo
              port: 7054             
          volumeMounts:
            - name: data
              mountPath: /var/hyperledger
            - name: ca-config
              readOnly: true
              mountPath: /var/hyperledger/ca_config
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 128Mi
---
# Source: hlf-k8s/templates/deployment-enrollement-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msd-org-1-hlf-k8s-enrollment-operator
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: msd-org-1
    helm.sh/chart: hlf-k8s-7.0.1
    app.kubernetes.io/name: hlf-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: hlf-k8s-enrollment-operator
        app.kubernetes.io/instance: msd-org-1
  template:
    metadata:
      annotations:
        rollme: "DNoBh"
      labels:
        app.kubernetes.io/name: hlf-k8s-enrollment-operator
        app.kubernetes.io/instance: msd-org-1
    spec:
      serviceAccountName: msd-org-1-hlf-k8s
      containers:
        - name: fabric-tools
          image: us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-ca-tools:4
          imagePullPolicy: "IfNotPresent"
          command: ['sh', '-c']
          args:
            - |
              ## Update CA certs
              update-ca-certificates

              ## Check connection with the Certificate Authority
              printf "[DEBUG] Testing the connection with this node's Certificate Authority (http://msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054)\n"
              until fabric-ca-client getcainfo -u http://msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054; do
                printf "[DEBUG] Certificate Authority (http://msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054) server is not reacheable, retry in 5s\n"
                sleep 5
              done

              ## Enroll CA administrator
              printf "[DEBUG] Testing enrollment of CA admin\n"
              until fabric-ca-client identity list -u http://caAdmin:caPassword@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 --id caAdmin; do
                printf "[DEBUG] Certificate Authority admin is not enrolled, enrolling it now:\n"
                fabric-ca-client enroll -d -u http://caAdmin:caPassword@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 -M /var/hyperledger/fabric-ca/msp
                sleep 1
              done

              ## Create CA cert kubernetes secret
              ## Note: The CA cert is shared between all identities (CA admin, admins, and users)
              until kubectl get secret hlf-cacert > /dev/null; do
                printf "[DEBUG] CA cacerts k8s secret not found, creating it now:\n"
                kubectl create secret generic hlf-cacert --from-file=cacert.pem=$(find /var/hyperledger/fabric-ca/msp/cacerts -type f)
                sleep 1
              done

              ## Check connection with the Orderer Certificate Authority
              printf "[DEBUG] Testing the connection with the Orderer Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054)\n"
              until fabric-ca-client getcainfo -u http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054 -H /tmp/orderer; do
                printf "[DEBUG] Orderer Certificate Authority (http://msd-orderer-hlf-ca.msd-orderer.svc.cluster.local:7054) server is not reacheable, retry in 5s\n"
                sleep 5
              done

              ## Create Orderer CA Cert kubernetes secret
              until kubectl get secret ord-tls-rootcert > /dev/null; do
                printf "[DEBUG] Orderer CA cacerts k8s secret not found, creating it now:\n"
                kubectl create secret generic ord-tls-rootcert --from-file=cacert.pem=$(find /tmp/orderer/msp/cacerts -type f)
                sleep 1
              done

              ## Enroll users
              while true; do

                while IFS=" " read -r name secret options; do

                  printf "[DEBUG] Checking enrollment of CA user $name\n"

                  ## Register user
                  until fabric-ca-client identity list -u http://caAdmin:caPassword@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 --id $name; do
                    printf "[DEBUG] User $name is not registered, registering the user now:\n"
                    fabric-ca-client register -d -u http://caAdmin:caPassword@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 --id.name $name --id.secret $secret $options
                    sleep 1
                  done

                  ## Enroll user (MSP)
                  until [ -d "/data/$name/msp" ]; do
                    printf "[DEBUG] MSP certificate not found: enrolling user '$name' now:\n"
                    fabric-ca-client enroll -d -u http://$name:$secret@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 -M /data/$name/msp
                    sleep 1
                  done

                  ## Enroll user (TLS)
                  until [ -d "/data/$name/tls" ]; do
                    printf "[DEBUG] TLS certificate not found: enrolling user '$name' with TLS profile now:\n"
                    fabric-ca-client enroll -d --enrollment.profile tls -u http://$name:$secret@msd-org-1-hlf-ca.msd-org-1.svc.cluster.local:7054 -M /data/$name/tls --csr.hosts "localhost,127.0.0.1,127.0.0.1,localhost,234.435.56.7,*.msd-org-1.svc.cluster.local,*.elb.us-east-1.amazonaws.com,*.msd-org-1.apdlt-dev.merck.com"
                    sleep 1
                  done

                  ## Create secret: MSP cert
                  until kubectl get secret hlf-msp-cert-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'MSP cert' secret not found, creating it now:\n"
                    kubectl create secret generic hlf-msp-cert-$name --from-file=cert.pem=/data/$name/msp/signcerts/cert.pem
                    sleep 1
                  done

                  ## Create secret: MSP key
                  until kubectl get secret hlf-msp-key-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'MSP key' secret not found, creating it now:\n"
                    kubectl create secret generic hlf-msp-key-$name --from-file=key.pem=$(find /data/$name/msp/keystore -type f)
                    sleep 1
                  done

                  ## Create secret: TLS pair
                  until kubectl get secret hlf-tls-$name > /dev/null; do
                    printf "[DEBUG] User '$name' 'TLS pair' secret not found, creating it now:\n"
                    kubectl create secret tls hlf-tls-$name --key $(find /data/$name/tls/keystore -type f) --cert /data/$name/tls/signcerts/cert.pem
                    sleep 1
                  done

                done < /config/enrollments

                sleep 10
              done
          resources:
              null
          volumeMounts:
            - mountPath: /etc/hyperledger/fabric
              name: fabric-config
              readOnly: true
            - mountPath: /config
              name: enrollment
              readOnly: true
            - mountPath: /data
              name: data
      volumes:
        - name: fabric-config
          configMap:
            name: msd-org-1-hlf-k8s-fabric
        - name: enrollment
          configMap:
            name: msd-org-1-hlf-k8s-enrollment
        - name: data
          emptyDir: {}
---
# Source: hlf-k8s/templates/configmap-application-organization.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/configmap-application-proposal-organization.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/configmap-private-collections.yaml
# Copyright 2018 Owkin, inc.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #      http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
---
# Source: hlf-k8s/templates/configmap-system-organizations.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-appchannel-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-chaincode-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-config-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-genesis-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-monitor.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-system-channel-operator.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/deployment-toolbox.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: hlf-k8s/templates/job-hook-delete-secrets.yaml
# # Copyright 2018 Owkin, inc.
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #      http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.

#
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: msd-org-1-hlf-k8s-hook-delete-secrets
#   labels:
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/instance: msd-org-1
#     helm.sh/chart: hlf-k8s-7.0.1
#     app.kubernetes.io/name: hlf-k8s-hook-delete-secrets
#     app.kubernetes.io/part-of: hlf-k8s
#   annotations:
#     "helm.sh/hook": post-delete
#     "helm.sh/hook-delete-policy": hook-succeeded
#   namespace: "msd-org-1"
# spec:
#   template:
#     spec:
#       restartPolicy: OnFailure
#       serviceAccountName: substra-delete-hook
#       containers:
#       - name: fabric-tools
#         image: us-central1-docker.pkg.dev/blockedge-381408/hlf-img/fabric-tools:1
#         imagePullPolicy: "IfNotPresent"
#         command: ['kubectl']
#         args:
#           - delete
#           - secrets
#           - -n
#           - msd-org-1
#           - hlf-msp-cert-user
#           - hlf-msp-key-user
#           - hlf-cacert
#           - hlf-tls-admin
#           - hlf-tls-user
#           - hlf-cacert
#           - hlf-cacert
#           - hlf-msp-cert-admin
#           - hlf-msp-key-admin
#           - ord-tls-rootcert
#           - hlf-genesis
#           - --ignore-not-found=true
#           - --wait=true
#           - -v=4
#
#
#
#

#
---
# Source: hlf-k8s/templates/rbac.yaml
# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
