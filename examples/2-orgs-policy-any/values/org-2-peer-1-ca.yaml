organization:
  id: MyOrg2MSP
  name: MyOrg2

nginx-ingress:
  enabled: false
  controller:
    scope:
      enabled: false

hlf-ca:
  enabled: true
  adminUsername: caAdmin
  adminPassword: caPassword
  caName: rcaOrg2
  host: org-2-hlf-ca.org-2
  orderer:
    host: orderer-hlf-ca.orderer

# hlf-ord:
#   host: orderer-hlf-ord.orderer

hlf-peer:
  enabled: false
#   host: org-2-peer-1-hlf-peer.org-2
#   peer:
#     couchdbInstance: org-2-peer-1
#     mspID: MyOrg1MSP
#     gossip:
#       externalEndpoint: org-2-peer-1-hlf-peer.org-2:7051
#   discover-monitor:
#     enabled: true

# chaincodes:
#   - name: mycc
#     address: org-2-peer-1-hlf-k8s-chaincode-mycc.org-2
#     port: 7052
#     version: "1.0"
#     image:
#       repository: substrafoundation/substra-chaincode
#       tag: 0.1.1
#       pullPolicy: IfNotPresent
#   # - name: yourcc
#   #   address: org-2-peer-1-hlf-k8s-chaincode-yourcc.org-2
#   #   port: 7052
#   #   version: "1.0"
#   #   image:
#   #     repository: substrafoundation/substra-chaincode
#   #     tag: 0.1.1
#   #     pullPolicy: IfNotPresent

# appChannels:
# - channelName: mychannel
#   channelPolicies: |-
#     Readers:
#         Type: ImplicitMeta
#         Rule: "ANY Readers"
#     Writers:
#         Type: ImplicitMeta
#         Rule: "ANY Writers"
#     Admins:
#         Type: ImplicitMeta
#         Rule: "ANY Admins"
#   appPolicies: |-
#     LifecycleEndorsement:
#         Type: ImplicitMeta
#         Rule: "ANY Endorsement"
#     Endorsement:
#         Type: ImplicitMeta
#         Rule: "ANY Endorsement"
#     Readers:
#         Type: ImplicitMeta
#         Rule: "ANY Readers"
#     Writers:
#         Type: ImplicitMeta
#         Rule: "ANY Writers"
#     Admins:
#         Type: ImplicitMeta
#         Rule: "ANY Admins"

#   chaincodes:
#   - name: mycc
#     policy: "OR('MyOrg1MSP.member','MyOrg2MSP.member')"
#     version: "1.0"

#   organizations:
#     - { org: MyOrg1, mspid: MyOrg1MSP, configUrl: org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }
#     - { org: MyOrg2, mspid: MyOrg2MSP, configUrl: org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }

# # - channelName: yourchannel
# #   channelPolicies: |-
# #     Readers:
# #         Type: ImplicitMeta
# #         Rule: "ANY Readers"
# #     Writers:
# #         Type: ImplicitMeta
# #         Rule: "ANY Writers"
# #     Admins:
# #         Type: ImplicitMeta
# #         Rule: "ANY Admins"
# #   appPolicies: |-
# #     LifecycleEndorsement:
# #         Type: ImplicitMeta
# #         Rule: "ANY Endorsement"
# #     Endorsement:
# #         Type: ImplicitMeta
# #         Rule: "ANY Endorsement"
# #     Readers:
# #         Type: ImplicitMeta
# #         Rule: "ANY Readers"
# #     Writers:
# #         Type: ImplicitMeta
# #         Rule: "ANY Writers"
# #     Admins:
# #         Type: ImplicitMeta
# #         Rule: "ANY Admins"

# #   chaincodes:
# #   - name: yourcc
# #     policy: "OR('MyOrg1MSP.member','MyOrg2MSP.member')"
# #     version: "1.0"

# #   organizations:
# #     - { org: MyOrg1, mspid: MyOrg1MSP, configUrl: org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }
# #     - { org: MyOrg2, mspid: MyOrg2MSP, configUrl: org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }


enrollments:
  creds:
    - { name: admin, secret: adminpwd, options: "--id.attrs hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert"}
    - { name: user, secret: pwd, options: "--id.type peer"}
    - { name: peer1, secret: pwd, options: "--id.type peer"}
  # csrHost is set for peer and chaincodes communications
  # csrHost: "org-2-peer-1-hlf-peer.org-2,org-2-peer-1-hlf-k8s-chaincode-basic.org-2"
  csrHost: "*.org-2"


toolbox:
  enabled: false

# hooks:
#   serviceAccount:
#     name: substra-delete-hook
